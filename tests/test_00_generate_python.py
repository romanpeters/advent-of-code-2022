#!/usr/bin/env python
import logging
from pathlib import Path
import nbformat
from nbconvert.preprocessors import ExecutePreprocessor

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)


def test_convert_notebooks():
    """Convert all notebooks in /notebooks to .py files"""
    logging.info("Converting notebooks to .py files")
    for notebook in Path("notebooks").glob("*.ipynb"):
        logging.info(f"Converting {notebook}")
        nb = nbformat.read(notebook, as_version=4)
        ep = ExecutePreprocessor(timeout=600, kernel_name="python3")
        ep.preprocess(nb, {"metadata": {"path": "notebooks"}})
        with open(f"notebooks/{notebook.stem}.py", "w") as f:
            f.write("# AUTOGENERATED FROM NOTEBOOK\n")
        with open(f"notebooks/{notebook.stem}.py", "a") as f:
            # write the code cells to the file
            for cell in nb.cells:
                if cell.cell_type == "code":
                    f.write(cell.source + "\n")


if __name__ == "__main__":
    test_convert_notebooks()
